'''
Python中的集合，和数学中的集合概念一样，用来保存不重复的元素，即集合中的元素都是唯一的，互不相同。
从形式上看，和字典类似，Python集合会将所有元素放在一对大括号{}中，相邻元素之间用“,”分隔。
集合的创建方式有{}创建和set()函数创建
注意，如果要创建空集合，只能使用 set() 函数实现
'''
# arr = {1, 'a', '一', ('甲', '乙', '丙'), ['one', 'two', 'three']}
arr = {1, 'a', '一', ('甲', '乙', '丙')}
# print(arr)  # {1, 'a', '一', ('甲', '乙', '丙')}

arr1 = set(['one', 'two', 'three'])
# print(arr1)  # {'one', 'three', 'two'}

# 访问set集合元素
# for ele in arr:
#     print(ele, end = "\t")  # ('甲', '乙', '丙')	1	一	a

# 删除set集合
# del(arr)
# print(arr)  # NameError: name 'arr' is not defined

# 向set集合中添加元素
皇帝 = {'曹操', '李世民', '李煜'}
军事家 = {'曹操', '李世民', '韩信'}
文学家 = {'曹操', '李煜'}
文学家.add('王安石')   # 使用 add() 方法添加的元素，只能是数字、字符串、元组或者布尔类型（True 和 False）值
# print(文学家)  # {'王安石', '曹操', '李煜'}
皇帝.add(('宇文泰', '杨坚', '李渊'))
皇帝.add('关陇集团')
# print(皇帝)  # {'李煜', '曹操', '李世民', ('宇文泰', '杨坚', '李渊'), '关陇集团'}

# 删除set集合中元素
皇帝.remove('关陇集团')
# print(皇帝)  # {('宇文泰', '杨坚', '李渊'), '曹操', '李世民', '李煜'}

# set集合交集操作&  取两集合公共的元素
print(皇帝 & 军事家)  # {'曹操', '李世民'}
print(皇帝 & 军事家 & 文学家)  # {'曹操'}

# set集合并集操作 |   取两集合全部的元素
print(文学家 | 皇帝)  # {'曹操', '王安石', '李煜', ('宇文泰', '杨坚', '李渊'), '李世民'}

# set集合差集操作 -   	取一个集合中另一集合没有的元素
print(皇帝 - 文学家)  # {'李世民', ('宇文泰', '杨坚', '李渊')}
print(文学家 - 皇帝)  # {'王安石'}

# set集合对称差集操作 ^   	取集合 A 和 B 中不属于 A&B 的元素
print(军事家 ^ 文学家)  # {'王安石', '韩信', '李煜', '李世民'}