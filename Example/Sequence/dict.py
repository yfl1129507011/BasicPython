'''
Python字典（dict）是一种无序的、可变的序列
它的元素以“键值对（key-value）”的形式存储
相对的，列表（list）和元组（tuple）都是有序的序列
'''

# 使用{}创建字典
scores = {'数学': 145, '语文': 138, '英语': 147, '理综': 285}
# print(scores)   # {'数学': 145, '语文': 138, '英语': 147, '理综': 285}

# 通过fromkeys()方法创建字典
className = ['数学', '语文', '英语', '理综']
scoreDict = dict.fromkeys(className, 0)   # 可用于字典进行初始化操作
# print(scoreDict)   # {'数学': 0, '语文': 0, '英语': 0, '理综': 0}

# 通过dict()映射函数创建字典
demo = (['two', 2], ['one', 1], ['three', 3])
a = dict(demo)
# print(a)  # {'two': 2, 'one': 1, 'three': 3}


# 访问字典
三国 = {'曹魏': '曹操', '东吴': '孙权', '蜀汉': '刘备'}
# print(三国['东吴'])  # 孙权
# print(三国.get('曹魏', '该键不存在'))  # 曹操
# print(三国['ad'])   # KeyError: 'ad'
# print(三国.get('韩国', '该键不存在'))  # 该键不存在

# 删除字典
# print(三国)  # {'曹魏': '曹操', '东吴': '孙权', '蜀汉': '刘备'}
# del 三国
# print(三国)  # NameError: name '三国' is not defined

# 字典添加键值对
三国['辽东'] = '公孙渊'
# print(三国)  # {'曹魏': '曹操', '东吴': '孙权', '蜀汉': '刘备', '辽东': '公孙渊'}

# 字典修改键值对
三国['曹魏'] = '曹丕'
# print(三国)   # {'曹魏': '曹丕', '东吴': '孙权', '蜀汉': '刘备', '辽东': '公孙渊'}

# 字典删除键值对
del 三国['辽东']
# print(三国)  # {'曹魏': '曹丕', '东吴': '孙权', '蜀汉': '刘备'}

# 判断字典中是否存在指定键值对
# print('曹魏' in 三国)  # True
# print('荆州' in 三国)   # False

# keys()方法获取字典所有的键名
# print(三国.keys())   # dict_keys(['曹魏', '东吴', '蜀汉'])
# print(list(三国.keys()))  # ['曹魏', '东吴', '蜀汉']
# values()方法获取字典所有的键值
# print(三国.values())   # dict_values(['曹丕', '孙权', '刘备'])
# print(list(三国.values()))  # ['曹丕', '孙权', '刘备']
# items()方法获取字典所有的键值对
# print(三国.items())    # dict_values(['曹丕', '孙权', '刘备'])
# print(list(三国.items()))  # [('曹魏', '曹丕'), ('东吴', '孙权'), ('蜀汉', '刘备')]

# 使用for in循环遍历
'''
key: 曹魏  value: 曹丕
key: 东吴  value: 孙权
key: 蜀汉  value: 刘备
'''
# for k, v in 三国.items():
    # print('key:', k, ' value:', v)

# 使用copy()方法拷贝字典
三国演义 = 三国.copy()
# print(三国演义)  # {'曹魏': '曹丕', '东吴': '孙权', '蜀汉': '刘备'}
三国演义['皇族'] = ['刘协', '刘表', '刘璋']
# print(三国演义)  # {'曹魏': '曹丕', '东吴': '孙权', '蜀汉': '刘备', '皇族': ['刘协', '刘表', '刘璋']}
# print(三国)  # {'曹魏': '曹丕', '东吴': '孙权', '蜀汉': '刘备'}
汉末 = 三国演义.copy()
# print(汉末)  # {'曹魏': '曹丕', '东吴': '孙权', '蜀汉': '刘备', '皇族': ['刘协', '刘表', '刘璋']}
# 由于 汉末 和 三国演义 共享[1,2,3]（浅拷贝），因此移除 三国演义 中列表中的元素，也会影响 汉末。
三国演义['皇族'].remove('刘协')
# print(汉末)  # {'曹魏': '曹丕', '东吴': '孙权', '蜀汉': '刘备', '皇族': ['刘表', '刘璋']}
# print(三国演义)  # {'曹魏': '曹丕', '东吴': '孙权', '蜀汉': '刘备', '皇族': ['刘表', '刘璋']}

# 使用update()方法更新键值对
三国.update({'蜀汉': '刘禅', '四世三公': ['袁术', '袁绍']})
# print(三国)  # {'曹魏': '曹丕', '东吴': '孙权', '蜀汉': '刘禅', '四世三公': ['袁术', '袁绍']}

'''
pop()和popitem()方法都是用来删除字典中的键值对，
不同的pop()用来删除指定的键值对，而popitem()删除最后一个键值对
'''
三国.pop('四世三公')
# print(三国)  # {'曹魏': '曹丕', '东吴': '孙权', '蜀汉': '刘禅'}
三国.popitem()
# print(三国)  # {'曹魏': '曹丕', '东吴': '孙权'}


# setdefault()设置默认键值对
三国.setdefault('曹魏', '曹操')  # key存在，原来的值不变
三国.setdefault('蜀汉', 'FenLon')  # key不存在，设置默认值
# print(三国)   # {'曹魏': '曹丕', '东吴': '孙权', '蜀汉': 'FenLon'}


# Python使用字典格式化字符串
keys = '三国中曹魏的君主是：%(曹魏)s，蜀汉是：%(蜀汉)s，东吴是：%(东吴)s'
# print(keys % 三国)  # 三国中曹魏的君主是：曹丕，蜀汉是：FenLon，东吴是：孙权